{"version":3,"file":"component---src-pages-page-2-js-64e6ad6848bf943d53dc.js","mappings":"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","sources":["webpack://random-graph-cycle-removal/./src/components/header.js","webpack://random-graph-cycle-removal/./src/components/layout.js","webpack://random-graph-cycle-removal/./src/components/seo.js","webpack://random-graph-cycle-removal/./src/pages/page-2.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      margin: `0 auto`,\n      padding: `var(--space-4) var(--size-gutter)`,\n      display: `flex`,\n      alignItems: `center`,\n      justifyContent: `space-between`,\n    }}\n  >\n    <Link\n      to=\"/\"\n      style={{\n        fontSize: `var(--font-sm)`,\n        textDecoration: `none`,\n      }}\n    >\n      {siteTitle}\n    </Link>\n    <img\n      alt=\"Gatsby logo\"\n      height={20}\n      style={{ margin: 0 }}\n      src=\"data:image/svg+xml,%3Csvg fill='none' viewBox='0 0 107 28' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3CclipPath id='a'%3E%3Cpath d='m0 0h106.1v28h-106.1z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cg fill='%23000'%3E%3Cpath clip-rule='evenodd' d='m89 11.7c-.8 0-2.2.2-3.2 1.6v-8.10005h-2.8v16.80005h2.7v-1.3c1.1 1.5 2.6 1.5999 3.2 1.5999 3 0 5-2.2999 5-5.2999s-2-5.3-4.9-5.3zm-.7 2.5c1.7 0 2.8 1.2 2.8 2.8s-1.2 2.8-2.8 2.8c-1.7 0-2.8-1.2-2.8-2.8s1.1-2.8 2.8-2.8z' fill-rule='evenodd'/%3E%3Cpath d='m71.2 21.9999v-7.6h1.9v-2.4h-1.9v-3.40005h-2.8v3.40005h-1.1v2.4h1.1v7.6z'/%3E%3Cpath clip-rule='evenodd' d='m65.6999 12h-2.9v1.3c-.8999-1.5-2.4-1.6-3.2-1.6-2.9 0-4.8999 2.4-4.8999 5.3s1.9999 5.2999 5.0999 5.2999c.8 0 2.1001-.0999 3.1001-1.5999v1.3h2.7999zm-5.1999 7.8c-1.7001 0-2.8-1.2-2.8-2.8s1.2-2.8 2.8-2.8c1.7 0 2.7999 1.2 2.7999 2.8s-1.1999 2.8-2.7999 2.8z' fill-rule='evenodd'/%3E%3Cpath d='m79.7001 14.4c-.7-.6-1.3-.7-1.6-.7-.7 0-1.1.3-1.1.8 0 .3.1.6.9.9l.7.2c.1261.0472.2621.0945.4037.1437.7571.2632 1.6751.5823 2.0963 1.2563.3.4.5 1 .5 1.7 0 .9-.3 1.8-1.1 2.5s-1.8 1.0999-3 1.0999c-2.1 0-3.2-.9999-3.9-1.6999l1.5-1.7c.6.6 1.4 1.2 2.2 1.2s1.4-.4 1.4-1.1c0-.6-.5-.9-.9-1l-.6-.2c-.0687-.0295-.1384-.0589-.2087-.0887l-.0011-.0004c-.6458-.2729-1.3496-.5704-1.8902-1.1109-.5-.5-.8-1.1-.8-1.9 0-1 .5-1.8 1-2.3.8-.6 1.8-.7 2.6-.7.7 0 1.9.1 3.2 1.1z'/%3E%3Cpath d='m98.5 20.5-4.8-8.5h3.3l3.1 5.7 2.8-5.7h3.2l-8 15.3h-3.2z'/%3E%3Cpath d='m47 13.7h7c0 .0634.01.1267.0206.1932.0227.1435.0477.3018-.0206.5068 0 4.5-3.4 8.1-8 8.1s-8-3.6-8-8.1c0-4.49995 3.6-8.09995 8-8.09995 2.6 0 5 1.2 6.5 3.3l-2.3 1.49995c-1-1.29995-2.6-2.09995-4.2-2.09995-2.9 0-4.9 2.49995-4.9 5.39995s2.1 5.3 5 5.3c2.6 0 4-1.3 4.6-3.2h-3.7z'/%3E%3C/g%3E%3Cpath d='m18 14h7c0 5.2-3.7 9.6-8.5 10.8l-13.19995-13.2c1.1-4.9 5.5-8.6 10.69995-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.29995 2.5-8.49995 6l11.49995 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8z' fill='%23fff'/%3E%3Cpath d='m6.2 21.7001c-2.1-2.1-3.2-4.8-3.2-7.6l10.8 10.8c-2.7 0-5.5-1.1-7.6-3.2z' fill='%23fff'/%3E%3Cpath d='m14 0c-7.7 0-14 6.3-14 14s6.3 14 14 14 14-6.3 14-14-6.3-14-14-14zm-7.8 21.8c-2.1-2.1-3.2-4.9-3.2-7.6l10.9 10.8c-2.8-.1-5.6-1.1-7.7-3.2zm10.2 2.9-13.1-13.1c1.1-4.9 5.5-8.6 10.7-8.6 3.7 0 6.9 1.8 8.9 4.5l-1.5 1.3c-1.7-2.3-4.4-3.8-7.4-3.8-3.9 0-7.2 2.5-8.5 6l11.5 11.5c2.9-1 5.1-3.5 5.8-6.5h-4.8v-2h7c0 5.2-3.7 9.6-8.6 10.7z' fill='%237026b9'/%3E%3C/g%3E%3C/svg%3E\"\n    />\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          © {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n\nclass DynamicTree {\n  constructor(_n) {\n    this.n = _n;\n    this.g = Array.from(Array(this.n).keys());\n  }\n  findRoot(x) {\n    while(this.g[x] !== x) x = this.g[x];\n    return x;\n  }\n  exposeRoot(x) {\n    var p = [];\n    while(this.g[x] !== x) {\n      p.push(x);\n      x = this.g[x];\n    }\n    while (p.length > 0) {\n      this.g[x] = p[p.length-1];\n      x = p[p.length-1];\n      p.pop();\n    }\n    this.g[x] = x;\n  }\n  connectEdge(u, v) {\n    this.exposeRoot(u);\n    this.exposeRoot(v);\n    this.g[u] = v;\n  }\n  findDistance(u, v) {\n    this.exposeRoot(u);\n    var dist = 1;\n    while (v !== u) {\n      dist++;\n      v = this.g[v];\n    }\n    return dist;\n  }\n  removePath(u, v) {\n    this.exposeRoot(u);\n    while (v !== u) {\n      var tmp = this.g[v];\n      this.g[v] = v;\n      v = tmp;\n    }\n  }\n}\n\nclass Simulator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      seq: 0,\n      trials: 0,\n      conn_count: 0,\n      sum_finite_dist: 0,\n      num_layers: 10,\n      allowed_cycle_length: 10,\n      smallcyclesdetected: 0,\n      shuffleEdgesBeforeStart: true,\n      \n      graph_type: \"layered_complete_bipartite\",\n      // for \"layered_complete_bipartite\"\n      layer_width: 100,\n      downdegree: 101,\n      // for \"square_grid\",\n      grid_width: 100,\n    };\n    this.numLayersInput = React.createRef();\n    this.cycleLengthInput = React.createRef();\n    \n    this.shouldReset = true;\n    this.layers = [];\n    this.edgeList = [];\n  }\n\n  componentDidMount() {\n    setTimeout(this.prepareAndStartSimulation.bind(this), 50);\n  }\n\n  componentWillUnmount() {\n  }\n\n  addTrialResult(conn, dist, callback) {\n    var currentState = {...this.state};\n    currentState.trials += 1;\n    currentState.conn_count += conn;\n    currentState.sum_finite_dist += dist;\n    // if (conn === 1) console.log(dist, currentState.sum_finite_dist);\n    this.setState(currentState, () => setTimeout(callback, 10));\n  }\n\n  resetTrialResult(callback) {\n    var currentState = {...this.state};\n    currentState.trials = 0;\n    currentState.conn_count = 0;\n    currentState.sum_finite_dist = 0;\n    currentState.seq += 1;\n    this.setState(currentState, callback);\n  }\n\n  updateLayers() {\n    this.shouldReset = true;\n    var state = {...this.state};\n    state.num_layers = this.numLayersInput.current.value;\n    console.log(\"Set layers to be \" + state.num_layers);\n    this.setState(state, this.prepareAndStartSimulation.bind(this));\n  }\n\n  updateCycleLength() {\n    this.shouldReset = true;\n    var state = {...this.state};\n    state.allowed_cycle_length = this.cycleLengthInput.current.value;\n    this.setState(state, this.prepareAndStartSimulation.bind(this));\n  }\n\n  updateShuffleEdges(event) {\n    this.shouldReset = true;\n    var state = {...this.state};\n    state.shuffleEdgesBeforeStart = (event.target.value === \"true\");\n    this.setState(state, this.prepareAndStartSimulation.bind(this));\n  }\n\n  onChangeGraphType(event) {\n    this.shouldReset = true;\n    var val = event.target.value;\n    val = val.replace(/\\s+/g, '');\n    var state = {...this.state};\n    var changed = false;\n    if (val === \"layered_complete_bipartite\") {\n      state.graph_type = val;\n      changed = true;\n    } else if (val === \"square_grid\") {\n      state.graph_type = val;\n      changed = true;\n    }\n    \n    if (changed) {\n      console.log(\"Change Graph Type to \", val);\n      this.setState(state, this.prepareAndStartSimulation.bind(this));\n    }\n  }\n  onChangeLayerBipartite(event) {\n    this.shouldReset = true;\n    var val = parseInt(event.target.value);\n    console.log(val);\n    var state = {...this.state};\n    state.layer_width = val;\n\n    this.setState(state, this.prepareAndStartSimulation.bind(this));\n  }\n  onChangeDownDegree(event) {\n    this.shouldReset = true;\n    var val = parseInt(event.target.value);\n    console.log(val);\n    var state = {...this.state};\n    state.downdegree = val;\n\n    this.setState(state, this.prepareAndStartSimulation.bind(this));\n  }\n  \n\n  onChangeGridWidth(event) {\n    this.shouldReset = true;\n    var val = parseInt(event.target.value);\n    var state = {...this.state};\n    state.grid_width = val;\n    \n    this.setState(state, this.prepareAndStartSimulation.bind(this));\n  }\n    // <div>\n    //           <label>\n    //             <input type=\"radio\"\n    //             value=\"square_grid\"\n    //             defaultChecked={this.state.graph_type === \"square_grid\"}\n    //             name=\"graph_type\"\n    //             /> Square Grid\n    //           </label>\n    //           (Grid Width: <input defaultValue={100} onChange={this.onChangeGridWidth.bind(this)} \n    //           disabled={this.state.graph_type !== \"square_grid\"}\n    //           />)\n    //         </div>\n\n\n  render() {\n    return (\n      <div>\n        <h2>Simulation Result:</h2>\n        <div style={{padding: \"10px\", backgroundColor: \"#EEE\"}}>\n          <fieldset onChange={this.onChangeGraphType.bind(this)}>\n            <legend>Graph Type</legend>\n            <div>\n              <label>\n                <input type=\"radio\"\n                value=\"layered_complete_bipartite\"\n                defaultChecked={this.state.graph_type === \"layered_complete_bipartite\"} \n                name=\"graph_type\"\n                /> Layered Complete Bipartite \n              </label>\n              <div style={{paddingLeft: \"40pt\"}}>\n              Layer Width: <input defaultValue={100} onChange={this.onChangeLayerBipartite.bind(this)} disabled={this.state.graph_type !== \"layered_complete_bipartite\"} />\n              </div>\n              <div style={{paddingLeft: \"40pt\"}}>\n              Random Down Degree: <input defaultValue={101} onChange={this.onChangeDownDegree.bind(this)} disabled={this.state.graph_type !== \"layered_complete_bipartite\"} />\n              </div>\n              <div style={{paddingLeft: \"40pt\"}}>\n              Number Layers: <input id=\"num_layers\" defaultValue={10} ref={this.numLayersInput} onChange={this.updateLayers.bind(this)} />\n              </div>\n            </div>\n          </fieldset>\n\n        \n        Cycle Length: <input id=\"cycle_length\" defaultValue={10} ref={this.cycleLengthInput} onChange={this.updateCycleLength.bind(this)} /><br />\n        <div onChange={this.updateShuffleEdges.bind(this)}>\n          <input type=\"radio\" id=\"shuffle_edges_true\" value=\"true\" name=\"shuffle_edges\"\n          defaultChecked={this.state.shuffleEdgesBeforeStart} /><label htmlFor=\"shuffle_edges_true\"> Shuffle Edge</label>\n          <input type=\"radio\" value=\"false\"\n          name=\"shuffle_edges\"  id=\"shuffle_edges_false\" \n          defaultChecked={this.state.shuffleEdgesBeforeStart === false}\n          /><label htmlFor=\"shuffle_edges_false\"> No Shuffle</label>\n        </div>\n        </div>\n        <p>\n        Graph size: {this.n} vertices.<br />\n        Edge List Length: {this.edgeList !== undefined? this.edgeList.length: 0} <br />\n        Layers: {this.layers !== undefined? this.layers.length-2 : 0}.<br />\n        Cycle Length: {this.L}.<br />\n        Number of Simulations: {this.state.trials}<br />\n        Connected: {this.state.conn_count}/{this.state.trials} ({(this.state.conn_count/this.state.trials*100).toFixed(2)}%)<br />\n        Avg Finite Dist: {this.state.sum_finite_dist/this.state.conn_count}</p>\n        </div>\n    );\n  }\n\n  prepareAndStartSimulation() {\n    if (this.shouldReset === false) return;\n\n    this.L = this.state.allowed_cycle_length;\n\n    if (this.state.graph_type === \"layered_complete_bipartite\") {\n      this.n = 0;\n      this.layers = [1];\n      for (var i = 0; i < this.state.num_layers; i++)\n        this.layers.push(this.state.layer_width);\n      this.layers.push(1);\n      this.edgeList = [];\n\n      // add estimate.\n      var edge_list_estimate = 0;\n      for (var i = 0; i+1 < this.layers.length; i++) {\n        edge_list_estimate += this.layers[i] * Math.min(this.state.downdegree, this.layers[i+1]);\n      }\n      if (edge_list_estimate >= 1000000) {\n        console.error(\"Too many edges!\");\n        return;\n      }\n\n      for (var i = 0; i+1 < this.layers.length; i++) {\n        var le=0, re=0;\n        le = this.n;\n        re = this.n + this.layers[i];\n        this.n += this.layers[i];\n        \n        if (i !== 0 && i+1 !== this.layers.length-1 && this.layers[i+1] >= this.state.downdegree) {\n          var arr = [];\n          for(var y=0;y<this.layers[i+1];y++) arr.push(re+y);\n\n          for(var x=0;x<this.layers[i];x++) {\n            var nbrs = [];\n            for(var cidx = 0; cidx < this.state.downdegree; cidx++) {\n              var ridx = Math.floor(Math.random() * (arr.length - cidx)) + cidx;\n              [arr[cidx], arr[ridx]] = [arr[ridx], arr[cidx]];\n              nbrs.push(arr[cidx]);\n              // this.edgeList.push([le+x, arr[cidx]]);\n            }\n            nbrs.sort();\n            for(var v of nbrs) {\n              this.edgeList.push([le+x, v]);\n            }\n          }\n        } else {\n        for(var x=0;x<this.layers[i];x++)\n          for(var y=0;y<this.layers[i+1];y++)\n          this.edgeList.push([le+x, re+y]);\n        }\n      }\n      \n      this.n += this.layers[this.layers.length - 1];\n    } else if (this.state.graph_type === \"square_grid\") {\n\n      var side = parseInt(this.state.grid_width);\n\n      this.n = side * side;\n      this.edgeList = [];\n\n      var enc = (i, j) => i*side+j;\n\n      for (var i = 0; i < side; i++) {\n        for (var j = 0; j < side; j++) {\n          if (j+1 < side)\n            this.edgeList.push([enc(i, j), enc(i, j+1)]);\n          if (i+1 < side)\n            this.edgeList.push([enc(i, j), enc(i+1, j)]);\n        }\n      }\n\n    }\n\n    // shuffle edge\n    if (this.state.shuffleEdgesBeforeStart)\n      for(var cidx = 0; cidx < this.edgeList.length; cidx++) {\n        var ridx = Math.floor(Math.random() * (this.edgeList.length - cidx)) + cidx;\n        [this.edgeList[cidx], this.edgeList[ridx]] = \n        [this.edgeList[ridx], this.edgeList[cidx]];\n      }\n\n    this.shouldReset = false;\n    this.resetTrialResult(((seq) => this.run(seq)).bind(this, this.state.seq+1));\n  }\n\n  run(seq) {\n    console.log(\"seq=\", seq, \" state=\", this.state.seq);\n    if (this.shouldReset === true) {\n      return;\n    }\n    if (seq !== this.state.seq) {\n      return;\n    }\n\n    // target edge (0, n-1)\n    var tree = new DynamicTree(this.n);\n    for (var e of this.edgeList) {\n      var x = e[0], y = e[1];\n      if (Math.random() <= 0.5) continue;\n      if (tree.findRoot(x) !== tree.findRoot(y)) {\n        tree.connectEdge(x, y);\n      } else if (tree.findDistance(x, y) <= this.L) {\n        tree.removePath(x, y);\n      }\n    }\n    if (tree.findRoot(0) === tree.findRoot(this.n-1)) {\n      this.addTrialResult(1, tree.findDistance(0, this.n-1), this.run.bind(this, seq));\n    } else {\n      this.addTrialResult(0, 0, this.run.bind(this, seq));\n    }\n    \n  }\n}\n\nconst SecondPage = () => (\n  <Layout>\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Simulator></Simulator>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Page two\" />\n\nexport default SecondPage\n"],"names":["siteTitle","style","margin","padding","display","alignItems","justifyContent","Link","to","fontSize","textDecoration","alt","height","src","children","data","useStaticQuery","site","siteMetadata","title","maxWidth","marginTop","Date","getFullYear","href","description","metaDescription","defaultTitle","name","content","property","author","DynamicTree","_n","this","n","g","Array","from","keys","findRoot","x","exposeRoot","p","push","length","pop","connectEdge","u","v","findDistance","dist","removePath","tmp","Simulator","props","state","date","seq","trials","conn_count","sum_finite_dist","num_layers","allowed_cycle_length","smallcyclesdetected","shuffleEdgesBeforeStart","graph_type","layer_width","downdegree","grid_width","numLayersInput","React","cycleLengthInput","shouldReset","layers","edgeList","componentDidMount","setTimeout","prepareAndStartSimulation","bind","componentWillUnmount","addTrialResult","conn","callback","currentState","setState","resetTrialResult","updateLayers","current","value","console","log","updateCycleLength","updateShuffleEdges","event","target","onChangeGraphType","val","replace","changed","onChangeLayerBipartite","parseInt","onChangeDownDegree","onChangeGridWidth","render","backgroundColor","onChange","type","defaultChecked","paddingLeft","defaultValue","disabled","id","ref","htmlFor","undefined","L","toFixed","i","edge_list_estimate","Math","min","error","le","re","arr","y","nbrs","cidx","ridx","floor","random","sort","side","enc","j","run","tree","e","Head"],"sourceRoot":""}